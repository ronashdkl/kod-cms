<?php

namespace ronashdkl\kodCms\modules\admin\models;

use ronashdkl\kodCms\components\FieldConfig;
use ronashdkl\kodCms\modules\admin\models\behaviours\LanguageBehaviour;
use Imagine\Image\Box;
use Yii;
use yii\helpers\FileHelper;
use yii\helpers\VarDumper;
use yii\imagine\Image;
use yii\web\UploadedFile;

/**
 * This is the model class for table "slider_main".
 *
 * @property int $id
 * @property string $image
 * @property string $summary
 * @property string $title
 * @property string $button
 * @property int $snow
 * @property string $text_class
 *
 * @property SliderMainButton[] $sliderMainButtons
 */
class SliderMain extends \yii\db\ActiveRecord
{
    const PATH = "@web/media/sliders/";

    public $sliderImage;


    public function init()
    {
        parent::init();
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'slider_main';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'text_class', 'snow'], 'required'],
            [['image', 'button'], 'string'],
            [['snow'], 'integer'],
            [['summary', 'title'], 'string', 'max' => 200],
            [['text_class'], 'string', 'max' => 20],
            [
                'sliderImage',
                'image',
                'minWidth' => 720,
                'maxWidth' => 1920,
                'minHeight' => 480,
                'maxHeight' => 1280,
                'extensions' => 'jpg, gif, png'
            ]
        ];
    }

    public function behaviors()
    {
        return [
            [
                'class' => LanguageBehaviour::class,
                'languageAttributes' => [
                    'title',
                    'summary'
                ]
            ]
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'image' => Yii::t('app', 'Image'),
            'summary' => Yii::t('app', 'Summary'),
            'title' => Yii::t('app', 'Title'),
            'button' => Yii::t('app', 'Button'),
            'snow' => Yii::t('app', 'Snow Fall'),
            'text_class' => Yii::t('app', 'Text Class'),
        ];
    }

    public function formTypes()
    {
        return [
            'title' => [
                'type' => FieldConfig::INPUT
            ],
            'summary' => [
                'type' => FieldConfig::CKEDITOR
            ]
        ];
    }

    /**
     * @param $image UploadedFile
     * @return bool
     */
    public function upload()
    {
        $image = UploadedFile::getInstance($this, 'sliderImage');
        if ($image == null) {

            return true;
        }
        if ($this->validate()) {
            $savePath = Yii::getAlias('@webroot/media/sliders/');
            if (!is_dir($savePath)) {
                mkdir($savePath, 0777, true);
            }
            $avatar = $savePath . uniqid() . '.' . $image->extension;
            $image->saveAs($avatar);
            $this->removeOldImage();
            $this->image = $avatar;
            Yii::info('Images saved to ' . $savePath, 'app');
            return true;
        } else {
            return false;
        }
    }



    public function getImage($onlyName=false){
        $img =  explode('/',$this->image);
        $last  = array_key_last($img);
        if($onlyName){
        return  $img[$last];
        }
        return Yii::getAlias('@web/media/sliders/'.$img[$last]);
    }

    public static function image($image){
        $img =  explode('/',$image);
        $last  = array_key_last($img);
        return Yii::getAlias('@web/media/sliders/'.$img[$last]);
    }

    private function removeOldImage()
    {
        if (is_file($this->image)) {
            FileHelper::unlink($this->image);
            Yii::info('Images removed   # ' . $this->image, 'app');
            $this->image = null;
        }
    }


    public function beforeDelete()
    {
        $this->removeOldImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSliderMainButtons()
    {
        return $this->hasMany(SliderMainButton::className(), ['slider_main_id' => 'id']);
    }

    /**
     * {@inheritdoc}
     * @return SliderMainQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new SliderMainQuery(get_called_class());
    }
}
