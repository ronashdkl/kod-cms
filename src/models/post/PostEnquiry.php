<?php

namespace ronashdkl\kodCms\models\post;

use ronashdkl\kodCms\components\FieldConfig;
use ronashdkl\kodCms\modules\admin\models\behaviours\Logbehaviour;
use ronashdkl\kodCms\modules\admin\models\Post;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\helpers\Html;
use yii\helpers\Url;

/**
 * This is the model class for table "post_enquiry".
 *
 * @property int $id
 * @property int $post_id
 * @property string $full_name
 * @property string $email
 * @property string $message
 * @property int $seen
 * @property string $created_at
 * @property string $updated_at
 * @property string $phone
 * @property Post $post
 */
class PostEnquiry extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'post_enquiry';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['post_id', 'full_name', 'email', 'message'], 'required'],
            [['post_id'], 'integer'],
            ['seen','safe'],
            ['phone','safe'],
            [['message'], 'string'],
            [['created_at', 'updated_at'], 'safe'],
            [['full_name'], 'string', 'max' => 200],
            [['email'], 'string', 'max' => 30],
        ];
    }
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'value' => date('Y-m-d h:i')
            ],
            [
                'class' => Logbehaviour::class,
                'attribute' => 'full_name',
            ],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('site', 'ID'),
            'post_id' => Yii::t('site', 'Post ID'),
            'full_name' => Yii::t('site', 'Full Name'),
            'email' => Yii::t('site', 'Email'),
            'message' => Yii::t('site', 'Message'),
            'seen' => Yii::t('site', 'Seen'),
            'created_at' => Yii::t('site', 'Created At'),
            'updated_at' => Yii::t('site', 'Updated At'),
        ];
    }

    public function formTypes(){
        return [
            'full_name'=>[
                'type'=>FieldConfig::INPUT
            ],
            'email'=>[
                'type'=>FieldConfig::INPUT
            ],
            'phone'=>[
                'type'=>FieldConfig::INPUT
            ],
            'message'=>[
                'type'=>FieldConfig::CKEDITOR
            ]
        ];
    }

    public function getPost()
    {
      return $this->hasOne(Post::class,['id'=>'post_id']);
    }
    public function beforeSave($insert)
    {
        $this->log = Html::a("New Enquiry from ". $this->full_name." for ".$this->post->title." Product",['/admin/post/view','id'=>$this->post_id],['data-pjax'=>0]);
        if($this->isNewRecord){
            \Yii::$app->mailer->compose()
                ->setTo(\Yii::$app->view->params['config']('email'))
                ->setFrom([$this->email => $this->full_name])
                ->setSubject('New Enquiry for '.$this->post->title)
                ->setTextBody($this->message."<br/><p>".Html::a('click here',Url::to('/admin/post/view',['id'=>$this->post_id])).' to view this enquiry on website</p>')
                ->send();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    /**
     * {@inheritdoc}
     * @return PostEnquiryQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new PostEnquiryQuery(get_called_class());
    }
}
